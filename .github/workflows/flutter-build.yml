name: Build the flutter version of the RustDesk

on:
  workflow_call:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      upload-tag:
        type: string
        default: "nightly"

env:
  RUST_VERSION: "1.75"
  FLUTTER_VERSION: "3.24.5"
  VERSION: "1.3.4"
  NDK_VERSION: "r27c"
  TAG_NAME: "${{ inputs.upload-tag }}"
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"

jobs:
  # Windows Build
  build-for-windows-flutter:
    name: Build RustDesk for Windows
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: x86_64-pc-windows-msvc,
              arch: x86_64,
              vcpkg-triplet: x64-windows-static,
            }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.job.target }}
          components: "rustfmt"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Build RustDesk
        run: |
          python3 ./build.py --portable --hwcodec --flutter

      - name: Upload Windows Build
        if: env.UPLOAD_ARTIFACT == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-windows-${{ matrix.job.arch }}
          path: ./target/release

  # macOS Build
  build-for-macOS:
    name: Build RustDesk for macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: aarch64-apple-darwin,
              arch: aarch64,
            }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          targets: ${{ matrix.job.target }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Build RustDesk for macOS
        run: |
          python3 ./build.py --flutter --hwcodec

      - name: Upload macOS Build
        if: env.UPLOAD_ARTIFACT == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-macos-${{ matrix.job.arch }}
          path: ./flutter/build/macos/Build/Products/Release

  # iOS Build
  build-rustdesk-ios:
    name: Build RustDesk for iOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: aarch64-apple-ios

      - name: Build RustDesk for iOS
        run: |
          flutter build ipa --release --no-codesign

      - name: Upload iOS Build
        if: env.UPLOAD_ARTIFACT == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-ios
          path: ./flutter/build/ios/ipa

  # Android Build
  build-rustdesk-android:
    name: Build RustDesk for Android
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        job:
          - { arch: aarch64, target: aarch64-linux-android }
          - { arch: armv7, target: armv7-linux-androideabi }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y openjdk-11-jdk

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.job.target }}

      - name: Build RustDesk for Android
        run: |
          rustup target add ${{ matrix.job.target }}
          cargo build --release --target ${{ matrix.job.target }}
          flutter build apk --release

      - name: Upload Android Build
        if: env.UPLOAD_ARTIFACT == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: rustdesk-android-${{ matrix.job.arch }}
          path: ./flutter/build/app/outputs/flutter-apk
